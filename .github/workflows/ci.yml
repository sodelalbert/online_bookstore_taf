name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Formatting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync

      - name: Run Black
        run: uv run black .

  Linting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync

      - name: Run Pylint
        run: uv run pylint .

  Type-Checking:
    name: Type Checking
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync

      - name: Run MyPy
        run: uv run mypy .

  Smoke-Tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    needs: [Formatting, Linting, Type-Checking]
    env:
      BOOKS_API_BASE_URL: ${{ secrets.BOOKS_API_BASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync

      - name: Copy Sample .env
        # Secret Parameters are managed by GitHub
        run: |
          cp samples/.env.sample .env

      - name: Run Pytest
        run: uv run pytest -m smoke --html=reports/smoke.html

      - name: Upload Pytest HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: smoke-test-report
          path: |
            reports/smoke.html
            reports/logs/*.log

  API-Regrsssion-Test:
    name: API Regrsssion Tests
    runs-on: ubuntu-latest
    needs: [Smoke-Tests, Formatting, Linting, Type-Checking]
    env:
      BOOKS_API_BASE_URL: ${{ secrets.BOOKS_API_BASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync

      - name: Copy Sample .env
        # Secret Parameters are managed by GitHub
        run: |
          cp samples/.env.sample .env

      - name: Run Pytest
        run: uv run pytest -m api --html=reports/api.html

      - name: Upload Pytest HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-report
          path: |
            reports/api.html
            reports/logs/*.log
