name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  Formatting:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync

      - name: Run Black
        run: uv run black .

  # Linting:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Install uv
  #       uses: astral-sh/setup-uv@v6

  #     - name: Install dependencies
  #       run: uv sync

  #     - name: Run Pylint
  #       run: uv run pylint .

  Type-Checking:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync

      - name: Run MyPy
        run: uv run mypy .

  Testing:
    runs-on: ubuntu-latest
    # needs: [Formatting, Linting, Type-Checking]
    needs: [Formatting, Type-Checking]
    env:
      BOOKS_API_BASE_URL: ${{ secrets.BOOKS_API_BASE_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Install dependencies
        run: uv sync

      - name: Run Pytest
        run: uv run pytest

      - name: Upload Pytest HTML Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-html-report
          path: reports/report.html
